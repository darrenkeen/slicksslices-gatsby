{"version":3,"sources":["webpack:///./src/styles/Grids.js","webpack:///./src/components/LoadingGrid.js","webpack:///./src/utils/useLatestData.js","webpack:///./src/components/ItemGrid.js","webpack:///./src/pages/index.js"],"names":["HomePageGrid","styled","div","ItemsGrid","ItemStyles","LoadingGrid","count","Array","from","length","_","i","key","className","src","alt","width","height","gql","String","raw","ItemGrid","items","map","item","name","image","asset","url","style","background","metadata","lqip","backgroundSize","CurrentlySlicing","slicemasters","HotSlices","hotSlices","HomePage","useState","setHotSlices","setSlicemasters","useEffect","fetch","process","method","headers","body","JSON","stringify","query","then","res","json","response","data","StoreSettings","slicemaster","catch","err","console","log","useLatestData"],"mappings":"+KAEaA,EAAeC,IAAOC,IAAV,0EAAGD,CAAH,6EAMZE,EAAYF,IAAOC,IAAV,uEAAGD,CAAH,0DAMTG,EAAaH,IAAOC,IAAV,wEAAGD,CAAH,idCXR,SAASI,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACpC,OACE,kBAACH,EAAD,KACGI,MAAMC,KAAK,CAAEC,OAAQH,IAAS,SAACI,EAAGC,GAAJ,OAC7B,kBAACP,EAAD,CAAYQ,IAAKD,GACf,2BACE,0BAAME,UAAU,QAAhB,eAEF,yBACEC,IAAI,0HACJD,UAAU,UACVE,IAAI,aACJC,MAAM,MACNC,OAAO,a,+wBCdnB,IAAMC,EAAMC,OAAOC,ICCJ,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,kBAACnB,EAAD,KACGmB,EAAMC,KAAI,SAACC,GAAD,OACT,kBAACpB,EAAD,CAAYQ,IAAKY,EAAKC,MACpB,2BACE,0BAAMZ,UAAU,QAAQW,EAAKC,OAE/B,yBACET,MAAM,MACNC,OAAO,MACPH,IAAQU,EAAKE,MAAMC,MAAMC,IAAtB,wBACHb,IAAKS,EAAKC,KACVI,MAAO,CACLC,WAAW,mBAAoBN,EAAKE,MAAMC,MAAMI,SAASC,KAA/C,IACVC,eAAgB,gBCZ9B,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAC1B,OACE,6BACE,wBAAItB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,oBAEF,4DACEsB,GAAgB,kBAAC9B,EAAD,CAAaC,MAAO,IACrC6B,KAAiBA,aAAD,EAACA,EAAc1B,SAC9B,2DAED0B,aAAA,EAAAA,EAAc1B,SAAU,kBAACY,EAAD,CAAUC,MAAOa,KAKhD,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACnB,OACE,6BACE,wBAAIxB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,kBAEF,qDACEwB,GAAa,kBAAChC,EAAD,CAAaC,MAAO,IAClC+B,KAAcA,aAAD,EAACA,EAAW5B,SAAU,4CACnC4B,aAAA,EAAAA,EAAW5B,SAAU,kBAACY,EAAD,CAAUC,MAAOe,KAK9B,SAASC,IAAY,IAAD,EFhCpB,WAA0B,IAAD,EACJC,qBAA3BF,EAD+B,KACpBG,EADoB,OAEED,qBAAjCJ,EAF+B,KAEjBM,EAFiB,KAqDtC,OAjDAC,qBAAU,WACRC,MAAMC,+DAAqC,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOhC,EAAF,SAiCNiC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLb,EAAgBa,EAASC,KAAKC,cAAcC,aAC5CjB,EAAac,EAASC,KAAKC,cAAcnB,cAE1CqB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAEI,CAAEtB,YAAWF,gBEpBgB2B,GAA5B3B,EADyB,EACzBA,aAAcE,EADW,EACXA,UACtB,OACE,yBAAKxB,UAAU,UACb,+CACA,0DACA,kBAACb,EAAD,KACE,kBAACkC,EAAD,CAAkBC,aAAcA,IAChC,kBAACC,EAAD,CAAWC,UAAWA","file":"component---src-pages-index-js-f60f25938c774e94d7a2.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HomePageGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: repeat(2, minmax(auto, 1fr));\n`;\n\nexport const ItemsGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const ItemStyles = styled.div`\n  text-align: center;\n  position: relative;\n  img {\n    height: auto;\n    font-size: 0;\n\n    @keyframes shine {\n      from {\n        background-position: 200%;\n      }\n      to {\n        background-position: -40px;\n      }\n    }\n\n    &.loading {\n      --shine: white;\n      --background: var(--grey);\n      background-image: linear-gradient(\n        90deg,\n        var(--background) 0px,\n        var(--shine) 40px,\n        var(--background) 80px\n      );\n      background-size: 500px;\n      animation: shine 1s infinite linear;\n    }\n  }\n  p {\n    transform: rotate(-2deg) translateY(-140%);\n    position: absolute;\n    width: 100%;\n    left: 0;\n  }\n  .mark {\n    display: inline;\n  }\n`;\n","import React from 'react';\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\n\nexport default function LoadingGrid({ count }) {\n  return (\n    <ItemsGrid>\n      {Array.from({ length: count }, (_, i) => (\n        <ItemStyles key={i}>\n          <p>\n            <span className=\"mark\">Loading...</span>\n          </p>\n          <img\n            src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAECAQAAADsOj3LAAAADklEQVR42mNkgANGQkwAAJoABWH6GPAAAAAASUVORK5CYII=\"\n            className=\"loading\"\n            alt=\"Loading...\"\n            width=\"500\"\n            height=\"400\"\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nconst gql = String.raw;\n\nexport default function useLatestData() {\n  const [hotSlices, setHotSlices] = useState();\n  const [slicemasters, setSlicemasters] = useState();\n\n  useEffect(() => {\n    fetch(process.env.GATSBY_GRAPHQL_ENDPOINT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n      body: JSON.stringify({\n        query: gql`\n          query {\n            StoreSettings(id: \"downtown\") {\n              name\n              slicemaster {\n                name\n                _id\n                image {\n                  asset {\n                    url\n                    metadata {\n                      lqip\n                    }\n                  }\n                }\n              }\n              hotSlices {\n                name\n                _id\n                image {\n                  asset {\n                    url\n                    metadata {\n                      lqip\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setSlicemasters(response.data.StoreSettings.slicemaster);\n        setHotSlices(response.data.StoreSettings.hotSlices);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return { hotSlices, slicemasters };\n}\n","import React from 'react';\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\n\nexport default function ItemGrid({ items }) {\n  return (\n    <ItemsGrid>\n      {items.map((item) => (\n        <ItemStyles key={item.name}>\n          <p>\n            <span className=\"mark\">{item.name}</span>\n          </p>\n          <img\n            width=\"500\"\n            height=\"400\"\n            src={`${item.image.asset.url}?w=500&h=400&fit=crop`}\n            alt={item.name}\n            style={{\n              background: `transparent url(${item.image.asset.metadata.lqip})`,\n              backgroundSize: 'cover',\n            }}\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n}\n","import React from 'react';\nimport LoadingGrid from '../components/LoadingGrid';\nimport { HomePageGrid } from '../styles/Grids';\nimport useLatestData from '../utils/useLatestData';\nimport ItemGrid from '../components/ItemGrid';\n\nfunction CurrentlySlicing({ slicemasters }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Slicemasters On</span>\n      </h2>\n      <p>Slicesmasters ready to slice</p>\n      {!slicemasters && <LoadingGrid count={4} />}\n      {slicemasters && !slicemasters?.length && (\n        <p>No one is working right now</p>\n      )}\n      {slicemasters?.length && <ItemGrid items={slicemasters} />}\n    </div>\n  );\n}\n\nfunction HotSlices({ hotSlices }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"tilt mark\">Hot slices On</span>\n      </h2>\n      <p>Slices ready to order</p>\n      {!hotSlices && <LoadingGrid count={4} />}\n      {hotSlices && !hotSlices?.length && <p>No pizzas :(</p>}\n      {hotSlices?.length && <ItemGrid items={hotSlices} />}\n    </div>\n  );\n}\n\nexport default function HomePage() {\n  const { slicemasters, hotSlices } = useLatestData();\n  return (\n    <div className=\"center\">\n      <h1>Best pizza evaa</h1>\n      <p>Open 11am to 11pm every day</p>\n      <HomePageGrid>\n        <CurrentlySlicing slicemasters={slicemasters} />\n        <HotSlices hotSlices={hotSlices} />\n      </HomePageGrid>\n    </div>\n  );\n}\n"],"sourceRoot":""}